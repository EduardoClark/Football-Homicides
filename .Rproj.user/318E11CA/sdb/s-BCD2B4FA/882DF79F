{
    "contents" : "###################################\n### Author:Eduardo Clark\n### Project: Homicides and Fútbol\n### Date: September 2013\n### For mediotiempo.com\n###################################\n\n### Read Homicides in Mexico Data\nHomicides <- read.csv(\"data/Homicidios.csv\")\nHomicides$day_occur <- as.Date(Homicides$date_occur)\n\n### Get number of homicides by date for each team \nPlaces <- sort(as.character(unique(Homicides$metro_area)))\nPlaces <- gsub(\" \", \"_\", Places)\nPlaces <- gsub(\",\", \"\", Places)\np <- c(\"Valle_de_México\", \"Cancún\", \"Guadalajara\", \"Valle_de_México\", \"Guadalajara\", \"Guadalajara\",\"Juárez\",\"Tuxtla_Gutiérrez\", \"Monterrey\", \"Morelia\", \"Aguascalientes\", \"Pachuca\", \"Puebla\", \"Valle_de_México\", \"Querétaro\", \"San_Luis_Potosí\", \"La_Laguna\", \"Monterrey\", \"Tijuana\", \"Toluca\", \"Veracruz\")\np <- gsub(\"_\", \" \", p)\nSubsetter <- function(Place){\n  tmp <- subset(Homicides, Homicides$metro_area==Place)\n  tmp <- ldply(table(tmp$date_occur))\n  colnames(tmp) <- c(\"Fecha\", \"Homicidios\")\n  tmp$Ciudad <- gsub(\"_\",\" \",Place)\n  return(tmp)\n}\nTabulados <- ldply(lapply(p, Subsetter))\nremove(Subsetter, Places)\nTabulados$Fecha <- as.Date(Tabulados$Fecha)\nTabulados <- subset(Tabulados, as.Date(Tabulados$Fecha) > \"2007-01-01\")\nEquipos <- data.frame(Equipo=sort(unique(Complete$Local)), Ciudad=p); remove(p)\nTabulados <- merge(Tabulados, Equipos, by=\"Ciudad\")\n\n### Include City in both Homicides per Day + Game Dates\nComplete <- merge(Complete, Equipos, by.x=\"Local\", by.y=1, all.x=TRUE, all.y=FALSE)\nEquipos1 <- Equipos\ncolnames(Equipos1) <- c(\"Visitante\", \"CiudadVisita\")\nComplete1 <- merge(Complete, Equipos1, by=\"Visitante\", all.x=TRUE, all.y=FALSE)\n#Tabulados <- merge(Tabulados, Equipos, by.x=\"Equipo\", by.y=1, all.x=TRUE, all.y=FALSE)\n\n\n### Merge with game dates and create final dataframe for analisis\nPanel <- merge(Tabulados, Complete, by.x=c(\"Fecha\", \"Ciudad\"), by.y=c(\"Fecha\", \"Ciudad\"), all=TRUE)\nPanel$Equipo <- NULL\nPanel <- unique(Panel)\nPanel$Partido <- ifelse(is.na(Panel$GolesVisita)==FALSE, \"Si\", \"No\")\nPanel$Dia <- wday(Panel$Fecha, label=TRUE)\n\n\n### Add visiting games\nComplete1 <- subset(Complete1, select=c(11,3))\nComplete1$PartidoVisita <- \"Si\"\nComplete1$Merger <- paste(Complete1$CiudadVisita,Complete1$Fecha, sep=\"-\")\nPanel$Merger <- paste(Panel$Ciudad, Panel$Fecha, sep=\"-\")\nComplete1$Fecha <- NULL\nPanel <- merge(Panel, Complete1, by=\"Merger\", all.x=TRUE, all.y=FALSE)\nPanel$Merger <- NULL\nPanel <- unique(Panel)\nPanel$PartidoVisita <- ifelse(is.na(Panel$PartidoVisita)==TRUE, \"No\", \"Si\")\nPanel$CiudadVisita <- NULL\nPanel$Homicidios <- ifelse(is.na(Panel$Homicidios)==TRUE, 0 ,Panel$Homicidios)\n\n##Remove Redundants\nremove(Complete1, Equipos, Equipos1, Homicides, Tabulados)\n\n\n\n#Panel1 <- subset(Panel, select=c(1,3,4,12,13))\n#Panel1 <- unique(Panel1)\n#Panel1$Index <- paste(Panel1$Fecha, Panel1$Ciudad, sep=\"-\")\n#Double <- ldply(table(Panel1$Index))\n#Panel1 <- merge(Panel1, Double, by.x=\"Index\", by.y=\".id\")\n#Panel1$Partido <- ifelse(Panel1$V1>1, \"Si\", Panel1$Partido)\n#Panel1 <- unique(Panel1)\n#Panel1$lHom <- log(Panel1$Homicidios)\n#Panel1$Month <- substr(Panel1$Fecha, 6,7)\n#colnames(Seleccion1) <- c(\"Fecha\", \"Seleccion\", \"ResultadoMexico\")\n#Panel1 <- merge(Panel1, Seleccion1, by=\"Fecha\", all=TRUE)\n#Panel1$Seleccion <- ifelse(is.na(Panel1$Seleccion)==TRUE, \"NoJuega\", Panel1$Seleccion)\n#Panel1$ResultadoMexico <- ifelse(is.na(Panel1$ResultadoMexico)==TRUE, \"NoJuega\", Panel1$ResultadoMexico)\n#Panel1$Anio <- substr(Panel1$Fecha,0,4)\n\n### Write analisis df as a csv\nwrite.csv(Panel, \"out-data/PanelComplete.csv\")\n",
    "created" : 1386618499996.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "183495097",
    "id" : "882DF79F",
    "lastKnownWriteTime" : 1386614960,
    "path" : "~/R/HomicidiosFutbol/src/HomicideData.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}